１．controller.jsにて、ログイン名のチェック処理の前にemitをしてしまっている。

２．ログイン名チェックエラーとなった後はフラグで制御でなく、returnをして処理を終える。

３．台札に置けないカードを置いた場合、サーバ側でチェックエラーとなるが、クライアント側でエラーハンドリングできていないため、カードが台札に置いたままになる。
　　→カードを置いたときに手札のロケーションが台札の上に重なるようになるが、controller.jsのカード反映処理にて、ロケーションを手札の位置に戻す必要がある。
　　→チェックエラーとなった場合、サーバ側はDTOのプレイヤー処理コードにエラーを示すコードをセットすること。また、クライアントに返却するDTOをput前の状態に初期化すること。

４．Chromeのデベロッパーツールを開くと、画面レイアウトが崩れる。
　　→CSSをちゃんと理解して作らないとダメ。

５．排他ロック関数（lockExclusion）で、ユーザ番号でなく、台札番号を見て排他ロックをかけること。
　　※台札に対して排他ロックをかける機能。

６．場札更新関数（updateFieldCard）にて、台札を重ねたカードに置き換える必要がある。

７．getMasterDto、setMasterDto、getResultDtoは、SpeedLogic.js内でしか使用しないprivateメソッドのため、exportsは必要ない。
　　→今後、SpeedServiceで使うことがある？
